// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
//
// Description: top level of vector add
// ===========================================================

`timescale 1 ns / 1 ps

(* CORE_GENERATION_INFO="vadd,hls_ip_2019_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.186000,HLS_SYN_LAT=48,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=99,HLS_SYN_LUT=539,HLS_VERSION=2019_2_1}" *)

module vadd (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in1_address0,
        in1_ce0,
        in1_q0,
        in2_address0,
        in2_ce0,
        in2_q0,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] in1_address0;
output   in1_ce0;
input  [31:0] in1_q0;
output  [2:0] in2_address0;
output   in2_ce0;
input  [31:0] in2_q0;
output  [2:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [31:0] out_r_d0;

wire ap_done;
wire ap_idle;
wire ap_ready;

wire    grp_add_fu_56_ap_start;
wire    grp_add_fu_56_ap_done;
wire    grp_add_fu_56_ap_idle;
wire    grp_add_fu_56_ap_ready;
wire    grp_add_fu_56_a_V_read;
wire    grp_add_fu_56_b_V_read;
wire   [31:0] grp_add_fu_56_c_V_din;
wire    grp_add_fu_56_c_V_write;

wire    grp_load_fu_63_ap_start;
wire    grp_load_fu_63_ap_done;
wire    grp_load_fu_63_ap_idle;
wire    grp_load_fu_63_ap_ready;
wire   [2:0] grp_load_fu_63_arr_address0;
wire    grp_load_fu_63_arr_ce0;
wire   [31:0] grp_load_fu_63_a_V_din;
wire    grp_load_fu_63_a_V_write;

wire    grp_load_fu_70_ap_start;
wire    grp_load_fu_70_ap_done;
wire    grp_load_fu_70_ap_idle;
wire    grp_load_fu_70_ap_ready;
wire   [2:0] grp_load_fu_70_arr_address0;
wire    grp_load_fu_70_arr_ce0;
wire   [31:0] grp_load_fu_70_a_V_din;
wire    grp_load_fu_70_a_V_write;

wire    grp_store_fu_77_ap_start;
wire    grp_store_fu_77_ap_done;
wire    grp_store_fu_77_ap_idle;
wire    grp_store_fu_77_ap_ready;
wire   [2:0] grp_store_fu_77_arr_address0;
wire    grp_store_fu_77_arr_ce0;
wire    grp_store_fu_77_arr_we0;
wire   [31:0] grp_store_fu_77_arr_d0;
wire    grp_store_fu_77_a_V_read;

wire   [31:0] a_V_dout;
wire    a_V_empty_n;
reg    a_V_read;
wire    a_V_full_n;
reg    a_V_write;

wire   [31:0] b_V_dout;
wire    b_V_empty_n;
wire    b_V_read;
wire    b_V_full_n;
wire    b_V_write;

wire    c_V_full_n;
wire    c_V_write;
wire   [31:0] c_V_dout;
wire    c_V_empty_n;
wire    c_V_read;

ctrl ctrl(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_ready(ap_ready),
    .grp_add_fu_56_ap_start(grp_add_fu_56_ap_start),
    .grp_add_fu_56_ap_done(grp_add_fu_56_ap_done),
    .grp_add_fu_56_ap_idle(grp_add_fu_56_ap_idle),
    .grp_add_fu_56_ap_ready(grp_add_fu_56_ap_ready),
    .grp_add_fu_56_a_V_read(grp_add_fu_56_a_V_read),
    .grp_add_fu_56_b_V_read(grp_add_fu_56_b_V_read),
    .grp_add_fu_56_c_V_write(grp_add_fu_56_c_V_write),
    .grp_load_fu_63_ap_start(grp_load_fu_63_ap_start),
    .grp_load_fu_63_ap_done(grp_load_fu_63_ap_done),
    .grp_load_fu_63_ap_idle(grp_load_fu_63_ap_idle),
    .grp_load_fu_63_ap_ready(grp_load_fu_63_ap_ready),
    .grp_load_fu_63_a_V_write(grp_load_fu_63_a_V_write),
    .grp_load_fu_70_ap_start(grp_load_fu_70_ap_start),
    .grp_load_fu_70_ap_done(grp_load_fu_70_ap_done),
    .grp_load_fu_70_ap_idle(grp_load_fu_70_ap_idle),
    .grp_load_fu_70_ap_ready(grp_load_fu_70_ap_ready),
    .grp_load_fu_70_a_V_write(grp_load_fu_70_a_V_write),
    .grp_store_fu_77_ap_start(grp_store_fu_77_ap_start),
    .grp_store_fu_77_ap_done(grp_store_fu_77_ap_done),
    .grp_store_fu_77_ap_idle(grp_store_fu_77_ap_idle),
    .grp_store_fu_77_ap_ready(grp_store_fu_77_ap_ready),
    .grp_store_fu_77_a_V_read(grp_store_fu_77_a_V_read),
    .a_V_read(a_V_read),
    .a_V_write(a_V_write),
    .b_V_read(b_V_read),
    .b_V_write(b_V_write),
    .c_V_write(c_V_write),
    .c_V_read(c_V_read)
);

add grp_add_fu_56(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_add_fu_56_ap_start),
    .ap_done(grp_add_fu_56_ap_done),
    .ap_idle(grp_add_fu_56_ap_idle),
    .ap_ready(grp_add_fu_56_ap_ready),
    .a_V_dout(a_V_dout),
    .a_V_empty_n(a_V_empty_n),
    .a_V_read(grp_add_fu_56_a_V_read),
    .b_V_dout(b_V_dout),
    .b_V_empty_n(b_V_empty_n),
    .b_V_read(grp_add_fu_56_b_V_read),
    .c_V_din(grp_add_fu_56_c_V_din),
    .c_V_full_n(c_V_full_n),
    .c_V_write(grp_add_fu_56_c_V_write)
);

load grp_load_fu_63(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_load_fu_63_ap_start),
    .ap_done(grp_load_fu_63_ap_done),
    .ap_idle(grp_load_fu_63_ap_idle),
    .ap_ready(grp_load_fu_63_ap_ready),
    .arr_address0(grp_load_fu_63_arr_address0),
    .arr_ce0(grp_load_fu_63_arr_ce0),
    .arr_q0(in1_q0),
    .a_V_din(grp_load_fu_63_a_V_din),
    .a_V_full_n(a_V_full_n),
    .a_V_write(grp_load_fu_63_a_V_write)
);

load grp_load_fu_70(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_load_fu_70_ap_start),
    .ap_done(grp_load_fu_70_ap_done),
    .ap_idle(grp_load_fu_70_ap_idle),
    .ap_ready(grp_load_fu_70_ap_ready),
    .arr_address0(grp_load_fu_70_arr_address0),
    .arr_ce0(grp_load_fu_70_arr_ce0),
    .arr_q0(in2_q0),
    .a_V_din(grp_load_fu_70_a_V_din),
    .a_V_full_n(b_V_full_n),
    .a_V_write(grp_load_fu_70_a_V_write)
);

store grp_store_fu_77(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_store_fu_77_ap_start),
    .ap_done(grp_store_fu_77_ap_done),
    .ap_idle(grp_store_fu_77_ap_idle),
    .ap_ready(grp_store_fu_77_ap_ready),
    .arr_address0(grp_store_fu_77_arr_address0),
    .arr_ce0(grp_store_fu_77_arr_ce0),
    .arr_we0(grp_store_fu_77_arr_we0),
    .arr_d0(grp_store_fu_77_arr_d0),
    .a_V_dout(c_V_dout),
    .a_V_empty_n(c_V_empty_n),
    .a_V_read(grp_store_fu_77_a_V_read)
);

fifo_w32_d8_A a_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_load_fu_63_a_V_din),
    .if_full_n(a_V_full_n),
    .if_write(a_V_write),
    .if_dout(a_V_dout),
    .if_empty_n(a_V_empty_n),
    .if_read(a_V_read)
);

fifo_w32_d8_A b_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_load_fu_70_a_V_din),
    .if_full_n(b_V_full_n),
    .if_write(b_V_write),
    .if_dout(b_V_dout),
    .if_empty_n(b_V_empty_n),
    .if_read(b_V_read)
);

fifo_w32_d8_A c_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_add_fu_56_c_V_din),
    .if_full_n(c_V_full_n),
    .if_write(c_V_write),
    .if_dout(c_V_dout),
    .if_empty_n(c_V_empty_n),
    .if_read(c_V_read)
);

assign in1_address0 = grp_load_fu_63_arr_address0;

assign in1_ce0 = grp_load_fu_63_arr_ce0;

assign in2_address0 = grp_load_fu_70_arr_address0;

assign in2_ce0 = grp_load_fu_70_arr_ce0;

assign out_r_address0 = grp_store_fu_77_arr_address0;

assign out_r_ce0 = grp_store_fu_77_arr_ce0;

assign out_r_d0 = grp_store_fu_77_arr_d0;

assign out_r_we0 = grp_store_fu_77_arr_we0;

endmodule //vadd
